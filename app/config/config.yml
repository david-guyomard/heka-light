imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

framework:
    #esi: ~
    translator: { fallbacks: ['%locale%'] }
    templating:
        engines: ['twig']
    secret: '%secret%'
    router:
        resource: '%kernel.project_dir%/app/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    serializer: { enabled: true, enable_annotations: true }
    default_locale: '%locale%'
    trusted_hosts: ~
    session:
        # https://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id: session.handler.native_file
        save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'
    fragments: ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'
    form_themes:
        - '@FOSCKEditor/Form/ckeditor_widget.html.twig'

# Doctrine Configuration
doctrine:
    dbal:
        driver: pdo_mysql
        host: '%database_host%'
        port: '%database_port%'
        dbname: '%database_name%'
        user: '%database_user%'
        password: '%database_password%'
        charset: UTF8
        types:
            json: Sonata\Doctrine\Types\JsonType
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: '%kernel.project_dir%/var/data/data.sqlite'
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path: '%database_path%'

    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        entity_managers:
            default:
                auto_mapping: true
                # # New custom filter
                # mappings:
                #     AppBundle: ~
                #     ApiBundle: ~
                #     ApplicationSonataUserBundle: ~

parameters:
    knp.doctrine_behaviors.blameable_subscriber.user_entity: Application\AppBundle\Entity\User #Application\Sonata\UserBundle\Entity\User

knp_doctrine_behaviors:
    blameable:      true
    sluggable:      true
    translatable:   true
    
a2lix_translation_form:
    locale_provider: default       
    locales: [fr, en, pt]      
    default_locale: '%locale%'             
    required_locales: [fr]         
    templating: "@A2lixTranslationForm/bootstrap_4_layout.html.twig"    
    
a2lix_auto_form:
    excluded_fields: [id, locale, translatable]      

be_simple_i18n_routing:
    locales:
        supported: ['fr', 'en', 'pt']
        filter: true
        strict: true

fos_user:
    db_driver: orm
    firewall_name: main
    user_class: Application\AppBundle\Entity\User #Application\Sonata\UserBundle\Entity\User
    group:
        group_class:   Application\Sonata\UserBundle\Entity\Group
        group_manager: sonata.user.orm.group_manager # If you're using doctrine orm (use sonata.user.mongodb.group_manager for mongodb)
    service:
        user_manager: sonata.user.orm.user_manager
    from_email:
        address: "admin@project-symfony.fr"
        sender_name: "Administrator"
    service:
        mailer: fos_user.mailer.twig_swift
    registration:
        confirmation:
            enabled: true
            from_email:
                address: no-reply@project-symfony.fr
                sender_name: Administrator
            template: 'emails/registration.email.twig'
    
# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    spool: { type: memory }

sensio_framework_extra:
   router:
        annotations: false

sonata_block:
    blocks:
        sonata.admin.block.admin_list:
            contexts: [admin]

sonata_user:
    class:
        user: Application\AppBundle\Entity\User #Application\Sonata\UserBundle\Entity\User
        group: Application\Sonata\UserBundle\Entity\Group
    security_acl: true
    manager_type: orm # can be orm or mongodb
    impersonating:
        route: user
        
# fos_ck_editor:
#     configs:
#         my_config:
#             toolbar: [ ["Source", "-", "Save"], "/", ["Anchor"], "/", ["Maximize"] ]
#             uiColor:                "#000000"
#             filebrowserUploadRoute: "admin_product_new"
#             extraPlugins:           "wordcount"
